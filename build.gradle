buildscript {

    ext."signing.keyId" = signId
    ext."signing.password" = signPassword
    ext."signing.secretKeyRingFile" = signFile

    repositories {
        maven { url "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.21'
    id 'org.jetbrains.dokka' version '0.9.16'
    id 'com.matthewprenger.cursegradle' version '1.0.10'
    id 'com.jfrog.bintray' version '1.8.0'
    id 'com.github.johnrengelman.plugin-shadow' version '2.0.2'
    id 'maven'
    id 'signing'
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = '1.3.0'
group = 'io.opencubes.boxlin'
archivesBaseName = 'boxlin'

minecraft {
    version = "1.12.2-14.23.1.2562"
    runDir = "run"

    mappings = "snapshot_20171003"
    makeObfSourceJar = false
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

repositories {
    jcenter()
    mavenCentral()
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"
compileTestKotlin.kotlinOptions.jvmTarget = "1.8"

signing {
    sign configurations.archives
}

task createPom {
    doLast {
        pom {
            project {
                packaging 'jar'

                name 'Boxlin'
                description 'A language adapter for mods coded in Kotlin + some utility functions.'
                url 'https://github.com/ocpu/Boxlin'

                licenses {
                    license {
                        name "MIT"
                        distribution "repo"
                    }
                }
                developers {
                    developer {
                        id "ocpu"
                        name "Martin HÃ¶vre"
                        email "martin.hovre@opencubes.io"
                    }
                }
                scm {
                    connection "https://github.com/ocpu/Boxlin.git"
                    developerConnection "https://github.com/ocpu/Boxlin.git"
                    url 'https://github.com/ocpu/Boxlin'
                }
            }
        }.writeTo("$buildDir/poms/pom.xml")
    }
}

bintray {
    user = bintrayUser
    key = bintrayKey
    configurations = ['archives']
    pkg {
        repo = "minecraft"
        name = archivesBaseName
        websiteUrl = 'https://github.com/ocpu/Boxlin'
        vcsUrl = "https://github.com/ocpu/Boxlin.git"
        licenses = ['MIT']
        publish = true
        version {
            name = project.version
            vcsTag = project.version
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

shadowJar {
    baseName = 'Boxlin'
    classifier = null
    exclude 'home'
    exclude 'gui'
    exclude 'adapter'
    exclude 'dummyThing'
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives file: file("$buildDir/poms/pom.xml"), name: 'pom.xml', builtBy: createPom
}
